// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace BDD_FizzBuzz_Lib_Tests.Scenario
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class FizzBuzzLibTestsFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
#line 1 "FizzBuzzLibTests.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("zh-TW"), "FizzBuzzLibTests", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "FizzBuzzLibTests")))
            {
                global::BDD_FizzBuzz_Lib_Tests.Scenario.FizzBuzzLibTestsFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(_testContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("呼叫GetResult方法並傳入0，結果應為空集合")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FizzBuzzLibTests")]
        public virtual void 呼叫GetResult方法並傳入0結果應為空集合()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("呼叫GetResult方法並傳入0，結果應為空集合", null, ((string[])(null)));
#line 6
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 7
 testRunner.Given("陣列長度輸入 0", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "假設");
#line 8
 testRunner.When("呼叫GetResult方法", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "當");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "value"});
#line 9
 testRunner.Then("結果為", ((string)(null)), table1, "那麼");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("呼叫GetResult方法並傳入2，結果應為長度2的字串集合")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FizzBuzzLibTests")]
        public virtual void 呼叫GetResult方法並傳入2結果應為長度2的字串集合()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("呼叫GetResult方法並傳入2，結果應為長度2的字串集合", null, ((string[])(null)));
#line 12
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 13
 testRunner.Given("陣列長度輸入 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "假設");
#line 14
 testRunner.When("呼叫GetResult方法", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "當");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "value"});
            table2.AddRow(new string[] {
                        "1"});
            table2.AddRow(new string[] {
                        "2"});
#line 15
 testRunner.Then("結果為", ((string)(null)), table2, "那麼");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("呼叫GetResult方法並傳入3，結果應為長度3的字串集合，且三的倍數應為Fizz")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FizzBuzzLibTests")]
        public virtual void 呼叫GetResult方法並傳入3結果應為長度3的字串集合且三的倍數應為Fizz()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("呼叫GetResult方法並傳入3，結果應為長度3的字串集合，且三的倍數應為Fizz", null, ((string[])(null)));
#line 20
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 21
 testRunner.Given("陣列長度輸入 3", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "假設");
#line 22
 testRunner.When("呼叫GetResult方法", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "當");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "value"});
            table3.AddRow(new string[] {
                        "1"});
            table3.AddRow(new string[] {
                        "2"});
            table3.AddRow(new string[] {
                        "Fizz"});
#line 23
 testRunner.Then("結果為", ((string)(null)), table3, "那麼");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("呼叫GetResult方法並傳入5，結果應為長度5的字串集合，且三的倍數應為Fizz，五的倍數應為Buzz")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FizzBuzzLibTests")]
        public virtual void 呼叫GetResult方法並傳入5結果應為長度5的字串集合且三的倍數應為Fizz五的倍數應為Buzz()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("呼叫GetResult方法並傳入5，結果應為長度5的字串集合，且三的倍數應為Fizz，五的倍數應為Buzz", null, ((string[])(null)));
#line 29
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 30
 testRunner.Given("陣列長度輸入 5", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "假設");
#line 31
 testRunner.When("呼叫GetResult方法", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "當");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "value"});
            table4.AddRow(new string[] {
                        "1"});
            table4.AddRow(new string[] {
                        "2"});
            table4.AddRow(new string[] {
                        "Fizz"});
            table4.AddRow(new string[] {
                        "4"});
            table4.AddRow(new string[] {
                        "Buzz"});
#line 32
 testRunner.Then("結果為", ((string)(null)), table4, "那麼");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("呼叫GetResult方法並傳入15，結果應無長度15的字串集合，三的倍數應為Fizz，五的倍數應為Buzz，滿足兩者應為FizzBuzz")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "FizzBuzzLibTests")]
        public virtual void 呼叫GetResult方法並傳入15結果應無長度15的字串集合三的倍數應為Fizz五的倍數應為Buzz滿足兩者應為FizzBuzz()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("呼叫GetResult方法並傳入15，結果應無長度15的字串集合，三的倍數應為Fizz，五的倍數應為Buzz，滿足兩者應為FizzBuzz", null, ((string[])(null)));
#line 40
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 41
 testRunner.Given("陣列長度輸入 15", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "假設");
#line 42
 testRunner.When("呼叫GetResult方法", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "當");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "value"});
            table5.AddRow(new string[] {
                        "1"});
            table5.AddRow(new string[] {
                        "2"});
            table5.AddRow(new string[] {
                        "Fizz"});
            table5.AddRow(new string[] {
                        "4"});
            table5.AddRow(new string[] {
                        "Buzz"});
            table5.AddRow(new string[] {
                        "Fizz"});
            table5.AddRow(new string[] {
                        "7"});
            table5.AddRow(new string[] {
                        "8"});
            table5.AddRow(new string[] {
                        "Fizz"});
            table5.AddRow(new string[] {
                        "Buzz"});
            table5.AddRow(new string[] {
                        "11"});
            table5.AddRow(new string[] {
                        "Fizz"});
            table5.AddRow(new string[] {
                        "13"});
            table5.AddRow(new string[] {
                        "14"});
            table5.AddRow(new string[] {
                        "FizzBuzz"});
#line 43
 testRunner.Then("結果為", ((string)(null)), table5, "那麼");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
